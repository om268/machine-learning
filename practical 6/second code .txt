# Logistic Regression Example with sklearn's dataset
import pandas as pd
from sklearn.datasets import make_classification
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

# Create sample classification dataset
X, y = make_classification(
    n_samples=100,     # number of rows
    n_features=2,      # number of features
    n_informative=2,   # number of useful features
    n_redundant=0,     # no duplicate features
    random_state=42
)

# Convert to DataFrame
df = pd.DataFrame(X, columns=['Feature1', 'Feature2'])
df['Target'] = y

print(df.head())

# Split dataset
X_train, X_test, y_train, y_test = train_test_split(
    df[['Feature1', 'Feature2']], 
    df['Target'], 
    test_size=0.2, 
    random_state=42
)

# Build Logistic Regression model
model = LogisticRegression()
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)

# Evaluation
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))